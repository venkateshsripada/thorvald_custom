<launch>

  <!--<group ns="Venkatesh">-->
    <!-- Runs one node. For Python, make sure your scripts are executable (use the chmod command as described in the homework description). -->
    <!--
      Turtlebot navigation simulation:
      - stage
      - map_server
      - move_base
      - static map
      - amcl
      - rviz view
     -->
     <!--<param name="/use_sim_time" value="true"/>-->
      <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, rhoomba -->
      <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
      <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

      <!-- Name of the map to use (without path nor extension) and initial position -->
      <arg name="map_file"       default=" $(env TURTLEBOT_STAGE_MAP_FILE)"/> 
      <arg name="world_file"     default=" $(env TURTLEBOT_STAGE_WORLD_FILE)"/>
      
      <!--<arg name="map_file"       default=" $(find thorvald_2dnav)/data/tutorial.yaml"/>-->
      <!--<arg name="world_file"     default=" $(find thorvald_2dnav)/data/tutorial.world"/>-->
      
      <!--<arg name="world_file"     default=" $(find gazebo_ros)/launch/empty_world.launch"/>-->
      <arg name="initial_pose_x" default="2.0"/>
      <arg name="initial_pose_y" default="2.0"/>
      <arg name="initial_pose_a" default="0.0"/>

      <arg name="paused" default="false"/>
      <arg name="gui" default="true"/>
      <arg name="headless" default="false"/>
      <arg name="debug" default="false"/>

      <arg name="urdf_file" default="$(find xacro)/xacro '$(find robot_description)/urdf/thorvald_urdf.urdf.xacro'"/>
      <arg name="rvizconfig" default="$(find robot_description)/rviz/thorvald_options.rviz" />

      
      <!--  ******************** Stage ********************  -->
      <!--
            Publishes transforms:
              /base_link -> /base_laser
              /base_footprint -> /base_link (identity)
              /odom -> base_footprint
            Publishes topics:
              /odom : odometry data from the simulated odometry
              /base_scan : laser data from the simulated laser
              /base_pose_ground_truth : the ground truth pose
            Parameters:
              base_watchdog_timeout : time (s) after receiving the last command on cmd_vel before stopping the robot
            Args:
              -g : run in headless mode.
      -->
      <node pkg="stage_ros" type="stageros" name="stageros" args="$(arg world_file)">
        <param name="base_watchdog_timeout" value="0.5"/>
        <remap from="odom" to="odom"/>
        <remap from="base_pose_ground_truth" to="base_pose_ground_truth"/>
        <remap from="cmd_vel" to="mobile_base/commands/velocity"/>
        <remap from="base_scan" to="scan"/>
      </node>


      <!--  ***************** Robot Model *****************  -->
      <include file="$(find robot_description)/launch/robot_gazebo.launch">
        <arg name="urdf_file" value="$(arg urdf_file)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="rvizconfig" value="$(arg rvizconfig)"/>
      </include>

      <!--  ************** Navigation  ***************  -->
      <include file="$(find thorvald_2dnav)/launch/includes/move_base.launch"/>

      <!--  ****** Maps *****  -->
      <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
        <param name="frame_id" value="map"/>
      </node>

      <include file="$(find thorvald_2dnav)/launch/includes/amcl.launch">
        <arg name="scan_topic" value="scan"/>
        <arg name="use_map_topic" value="true"/>
        <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
        <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
        <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
      </include>


</launch>
